---
branches:
  - main
  - name: stage
    prerelease: 'rc'
    channel: 'next'
preset: 'conventionalcommits'
tagFormat: 'v${version}'
plugins:
  - '@semantic-release/commit-analyzer'
  - '@semantic-release/release-notes-generator'
  - '@semantic-release/changelog'
  - '@semantic-release/exec'
  - '@saithodev/semantic-release-backmerge'
  - '@semantic-release/git'
  - '@semantic-release/github'
verifyConditions:
  - '@semantic-release/git'
  - '@semantic-release/github'
  - path: '@saithodev/semantic-release-backmerge'
    branches:
      - from: main
        to: stage
    backmergeStrategy: merge
analyzeCommits:
  - path: '@semantic-release/commit-analyzer'
    preset: 'conventionalcommits'
generateNotes:
  - path: '@semantic-release/release-notes-generator'
    preset: 'conventionalcommits'
prepare:
  - path: '@semantic-release/exec'
    prepareCmd: |
      sed -i "s/\(\"version.*: \"\).*/\1${nextRelease.version}\",/g" package.json
  - path: '@semantic-release/changelog'
    changelogFile: 'docs/CHANGELOG.md'
  - path: '@semantic-release/git'
    assets:
      - 'docs/CHANGELOG.md'
      - 'package.json'
      - 'package-lock.json'
      - 'npm-shrinkwrap.json'
    message: "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
  - path: '@semantic-release/exec'
    prepareCmd: |
      echo "prepared"
publish:
  - path: '@semantic-release/github'
# - path: '@semantic-release/exec'
#   publishCmd: |
#     docker buildx build \
#       --build-arg RELEASE_VERSION=${nextRelease.version} \
#       --build-arg RELEASE_GIT_HEAD=${nextRelease.gitHead} \
#       --build-arg NPM_TOKEN=$NPM_TOKEN \
#       --tag $IMAGE_NAME:${nextRelease.gitHead} \
#       --tag $IMAGE_NAME:${nextRelease.version} \
#       -f Dockerfile.Build \
#       --platform linux/amd64 \
#       --push \
#       .

success:
  - path: '@semantic-release/github'
  # - path: 'semantic-release-slack-bot'
  #   notifyOnSuccess: false
  #   notifyOnFail: true
  #   markdownReleaseNotes: true
  #   branchesConfig:
  #     - pattern: stage
  #       notifyOnSuccess: true
  #       notifyOnFail: true
  #     - pattern: main
  #       notifyOnSuccess: true
  #       notifyOnFail: true
  - path: '@saithodev/semantic-release-backmerge'
    backmergeBranches:
      - from: main
        to: stage
    backmergeStrategy: merge
# - path: '@semantic-release/exec'
#   successCmd: |
#     echo "NEXT_RELEASE_GIT_HEAD=${nextRelease.gitHead}" >> $GITHUB_OUTPUT
#     echo "NEXT_RELEASE_VERSION=${nextRelease.version}" >> $GITHUB_OUTPUT
#     echo "RELEASABLE=true" >> $GITHUB_OUTPUT

fail:
  - path: '@semantic-release/github'
# - path: 'semantic-release-slack-bot'
#   notifyOnSuccess: false
#   notifyOnFail: true
#   markdownReleaseNotes: true
#   branchesConfig:
#     - pattern: stage
#       notifyOnSuccess: true
#       notifyOnFail: true
#     - pattern: main
#       notifyOnSuccess: true
#       notifyOnFail: true
